# .github/workflows/shared-branch-management.yml
name: Shared Branch Management

on:
  workflow_call:
    inputs:
      branch-prefix:
        required: true
        type: string
      package-name:
        required: true
        type: string
      current-version:
        required: true
        type: string
      latest-version:
        required: true
        type: string
      base-branch:
        required: false
        type: string
        default: master
      test-details:
        required: true
        type: string
    secrets:
      GH_PAT:
        required: true

jobs:
  manage-branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      - name: Setup Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions Bot"

      - name: Process Branch
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          branch_name="${{ inputs.branch-prefix }}-${{ inputs.package-name }}-${{ inputs.latest-version }}"
          
          # Close existing PRs for this package
          gh pr list --state open --search "in:title ${{ inputs.package-name }}" --json number | \
          jq -r '.[].number' | while read -r pr_number; do
            gh pr close "$pr_number" -c "Closing in favor of new update PR"
          done
          
          # Delete old update branches for this package
          git branch -r | grep "origin/${{ inputs.branch-prefix }}-${{ inputs.package-name }}-" | \
          while read -r old_branch; do
            old_branch=${old_branch#origin/}
            if [ "$old_branch" != "$branch_name" ]; then
              echo "Deleting old branch: $old_branch"
              git push origin --delete "$old_branch" || true
            fi
          done
          
          # Check if branch exists
          if git ls-remote --exit-code --heads origin "$branch_name" > /dev/null 2>&1; then
            echo "Branch '$branch_name' already exists. Skipping update."
            exit 0
          fi
          
          # Check if PR exists
          if gh pr view "$branch_name" > /dev/null 2>&1; then
            echo "Pull request for branch '$branch_name' already exists. Skipping update."
            exit 0
          fi

          git checkout -b "$branch_name"
          
          # Return branch name for the calling workflow
          echo "BRANCH_NAME=$branch_name" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          gh pr create \
            --title "Update ${{ inputs.package-name }} to ${{ inputs.latest-version }}" \
            --body "This PR updates ${{ inputs.package-name }} from ${{ inputs.current-version }} to ${{ inputs.latest-version }}.
            
            ${{ inputs.test-details }}" \
            --base ${{ inputs.base-branch }} \
            --head "$BRANCH_NAME" \
            --label "dependencies" \
            --label "automated"